version: "3.9"
services:
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 20

  neo4j:
    image: neo4j:5.20.0
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_dbms_default__listen__address: "0.0.0.0"
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4J_PLUGINS: '["apoc"]'
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data

  backend:
    build:
      context: ./backend
    environment:
      APP_API_KEY: ${APP_API_KEY:-dev-token}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4o-mini}
      OPENAI_EMBED_MODEL: ${OPENAI_EMBED_MODEL:-text-embedding-3-small}
      OPENAI_EMBED_DIM: ${OPENAI_EMBED_DIM:-1536}
      POSTGRES_URI: ${POSTGRES_URI:-postgresql+psycopg2://postgres:postgres@db:5432/postgres}
      PGVECTOR_SCHEMA: ${PGVECTOR_SCHEMA:-public}
      COLLECTION_PREFIX: ${COLLECTION_PREFIX:-ttdb_}
      VECTOR_BACKEND: ${VECTOR_BACKEND:-pgvector}
      NEO4J_URI: ${NEO4J_URI:-bolt://neo4j:7687}
      NEO4J_USER: ${NEO4J_USER:-neo4j}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD:-password}
      NEO4J_DB: ${NEO4J_DB:-neo4j}
      ENABLE_KG: ${ENABLE_KG:-true}
    depends_on:
      - db
      - neo4j
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
    environment:
      API_URL: http://backend:8000/api/v1
      APP_API_KEY: ${APP_API_KEY:-dev-token}
    depends_on:
      - backend
    ports:
      - "8501:8501"

volumes:
  neo4j_data:
    driver: local